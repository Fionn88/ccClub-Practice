"""
金牌特務麵團
描述

麵團是金士曼特務組織新加入的成員，身為菜鳥的他被分配到負責傳遞並加密重要訊息的工作。他的主要工作內容如下:

傳進來的訊息總共會有兩行，第一行可能是 True 也有可能是 False，如果是 True 則代表是需要被加密的高級機密文件，反之，如果是 False 的話，就是一般文件，經過簡單處理後直接傳出即可。第二行即是原始資料。

工作上需要注意的有幾點:

因為傳遞時可能有雜訊，原始資料可能前面包含若干個空白，然而真正的訊息必然是三個緊密相連的英文字。
不論是高級文件抑或是一般文件，金士曼的通用的傳遞規則方法都是「大寫的英文字母」，因此，不論接收到的訊息是否包含小寫英文字母，須將其先全部轉成大寫字母，最後的輸出也必為大寫字母，且不能包含雜訊。
機密文件的加密規則如下:

將原文的雜訊(前面的空白)去除後，再將資訊中，位置為為偶數的兩個字交換位置。用 ASCII code 的方式將字母轉成數字加總並除以 26，若餘數部份為偶數，則直接把麵團自己的特務識別代碼 ”J” 加在訊息的倒數第二格，反之，若餘數是奇數，則需先將餘數轉成對應的英文字母(A->0, B->1..Z->25) 再插到訊息的倒數第二格，最後，再將每個字母用「凱薩密碼」的方式，將原英文字母平移 3 格後加密後輸出。


輸入
共有 2 行，

第 1 行代表是否需要加密，如果是為 True，不是為 False

第 2 行代表收到的訊息，前面可能會有若干的空白在搭配三個緊密相連的英文字母


輸出
共 1 行，加密後的訊息


輸入範例 1 
True
    Aab

輸出範例 1
EDMD

輸入範例 2 
False
 App

輸出範例 2
APP

提示
以 sample 1 來說，
第一行為 True，因此需要進行加密的工作，
先去掉前面的空白，得到 "Aab"，接者先將其轉成大寫，得到 "AAB"，依據加密規則將位置為偶數的 A(index 為 0)和 B(index 為 2)的兩個字母對換位置，變 "BAA"，之後將三個字母的 ASCII code 相加，再除以 26 可得到 14，因為 14 是偶數因此直接插入在倒數第二格的位置即可，得"BAJA" ，最後經過凱薩密碼將所有字母往右平移 3 格後，得到的答案為 " EDMD" ，即完成加密!
關於凱薩密碼可以參考這裡
關於如何去掉字串前面的空白可以參考 .strip() 這個用法
"""

state = input()
n = input().strip().upper()

if state == "True":
    n = list(reversed(n))
    j = sum([ord(i) for i in n]) % 26
    if j % 2 == 0:
        n.insert(2,"J")
    else:
        n.insert(2,chr(ord("A") + j))
    n = "".join([chr(ord(i) + 3) for i in n])
print(n)
