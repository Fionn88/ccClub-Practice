"""
撲克牌組合

描述
呈上題，在德州撲克中，玩家需使用共七張牌（自己的底牌和公牌），組合出最強的手牌（Hand）。而手牌為固定為五張撲克牌，亦即，玩家必須選取七張撲克牌中的五張。這給了我們 C(7, 5) = 21 種組合，我們可以透過比對所有組合來找到最強的手牌。
請撰寫一個函式get_cmb(hole: holeCards, board: boardCards)，其參數 hole 為玩家的兩張底牌，board 為五張公牌。回傳值為一個長度 21 的 list，每個元素又皆為一個 list，而此 21 個 list 分別代表著一種組合（長度為 5，每個元素皆為一個card物件）。
回傳值的順序不需固定，只要確保所有組合皆有出現。

輸入
hole：為一個holeCards物件，其屬性請參閱上一題。
board：為一個boardCards物件，其屬性請參閱上一題。

輸出
使用hole及board共七張撲克牌，回傳所有任取五張的組合（以 list 儲存所有組合）。
例如hole = ['2h', '6c']、board = ['3d', 'Tc', '8c', '8h', 'Jd']時，回傳[[2h, 3d, 6c, 8c, Tc], [2h, 3d, 6c, 8h, Tc], [2h, 3d, 6c, Jd, Tc], [2h, 3d, 6c, 8c, 8h], [2h, 3d, 6c, 8c, Jd], [2h, 3d, 6c, 8h, Jd], [2h, 6c, 8c, 8h, Tc], [2h, 6c, 8c, Jd, Tc], [2h, 6c, 8h, Jd, Tc], [2h, 6c, 8c, 8h, Jd], [2h, 3d, 8c, 8h, Tc], [2h, 3d, 8c, Jd, Tc], [2h, 3d, 8h, Jd, Tc], [2h, 3d, 8c, 8h, Jd], [2h, 8c, 8h, Jd, Tc], [3d, 6c, 8c, 8h, Tc], [3d, 6c, 8c, Jd, Tc], [3d, 6c, 8h, Jd, Tc], [3d, 6c, 8c, 8h, Jd], [6c, 8c, 8h, Jd, Tc], [3d, 8c, 8h, Jd, Tc]]
回傳值內各個 list 的元素須為card類別，以上回傳值之舉例僅為參考用。

輸入範例 1
2h 6c 3d Tc 8c 8h Jd

輸出範例 1
(2 3) (3 1) (6 0) (8 0) (8 3)
(2 3) (3 1) (6 0) (8 0) (10 0)
(2 3) (3 1) (6 0) (8 0) (11 1)
(2 3) (3 1) (6 0) (8 3) (10 0)
(2 3) (3 1) (6 0) (8 3) (11 1)
(2 3) (3 1) (6 0) (10 0) (11 1)
(2 3) (3 1) (8 0) (8 3) (10 0)
(2 3) (3 1) (8 0) (8 3) (11 1)
(2 3) (3 1) (8 0) (10 0) (11 1)
(2 3) (3 1) (8 3) (10 0) (11 1)
(2 3) (6 0) (8 0) (8 3) (10 0)
(2 3) (6 0) (8 0) (8 3) (11 1)
(2 3) (6 0) (8 0) (10 0) (11 1)
(2 3) (6 0) (8 3) (10 0) (11 1)
(2 3) (8 0) (8 3) (10 0) (11 1)
(3 1) (6 0) (8 0) (8 3) (10 0)
(3 1) (6 0) (8 0) (8 3) (11 1)
(3 1) (6 0) (8 0) (10 0) (11 1)
(3 1) (6 0) (8 3) (10 0) (11 1)
(3 1) (8 0) (8 3) (10 0) (11 1)
(6 0) (8 0) (8 3) (10 0) (11 1)

輸入範例 2
Ks 8d 4d 5s 3c 7d 9c

輸出範例 2
(3 0) (4 1) (5 2) (7 1) (8 1)
(3 0) (4 1) (5 2) (7 1) (9 0)
(3 0) (4 1) (5 2) (7 1) (13 2)
(3 0) (4 1) (5 2) (8 1) (9 0)
(3 0) (4 1) (5 2) (8 1) (13 2)
(3 0) (4 1) (5 2) (9 0) (13 2)
(3 0) (4 1) (7 1) (8 1) (9 0)
(3 0) (4 1) (7 1) (8 1) (13 2)
(3 0) (4 1) (7 1) (9 0) (13 2)
(3 0) (4 1) (8 1) (9 0) (13 2)
(3 0) (5 2) (7 1) (8 1) (9 0)
(3 0) (5 2) (7 1) (8 1) (13 2)
(3 0) (5 2) (7 1) (9 0) (13 2)
(3 0) (5 2) (8 1) (9 0) (13 2)
(3 0) (7 1) (8 1) (9 0) (13 2)
(4 1) (5 2) (7 1) (8 1) (9 0)
(4 1) (5 2) (7 1) (8 1) (13 2)
(4 1) (5 2) (7 1) (9 0) (13 2)
(4 1) (5 2) (8 1) (9 0) (13 2)
(4 1) (7 1) (8 1) (9 0) (13 2)
(5 2) (7 1) (8 1) (9 0) (13 2)
"""