"""
凱凱堆積木

描述
凱凱有一個還未上幼稚園的姪子嘻嘻，每次家族聚會時，經歷旺盛的嘻嘻總是喜歡在家裡跑來跑去，家族中的長輩們照顧他常常弄得精疲力盡。
為了減輕長輩們的負擔，凱凱決定教嘻嘻堆積木來分散他的注意力。積木上有著英文字母和數字，嘻嘻必須依照凱凱的需求，把積木堆成凱凱想要的樣子。

每一次堆積木之前，凱凱會跟嘻嘻說希望堆幾層的積木。
對於一個 N 層的積木塔，從上數下來的第 i 層（1<= i <= N），必須要有 i 個積木。舉例來說，一個三層的積木塔，第一層（最上面那層）會有一個積木，第二層（中間那層）會有兩個積木，第三層（最下面那層）會有三個積木。
此外，為了要讓自己輕鬆一點，凱凱希望增加堆積木的困難度，讓嘻嘻需要多花費和精力在堆積木上，自己才能在一旁滑手機上 PTT 和 Dcard。積木排列的方式必須依照字母順序（A, B, C, ..., X, Y, Z）或數字順序（1, 2, 3, ..., 9），從最上面那層開始，奇數層堆英文字母的積木，偶數層堆數字的積木。
如果是英文字母的積木，堆到 Z 之後，下一個要從 A 開始，並且繼續依序往下堆。若是數字的積木，堆到 9 之後，下一個要從 1 開始，並且繼續依序往下堆。
關於堆積木的例子可參考下面範例測資。

輸入
輸入有一行，包含一個正整數，代表需要堆的積木層數 n。

輸出
輸出有 n 行。
每一行包含一個字串，代表該層依序使用的積木種類。

輸入範例 1 
1

輸出範例 1
A

輸入範例 2 
6

輸出範例 2
A
12
BCD
3456
EFGHI
789123

輸入範例 3 
11

輸出範例 3
A
12
BCD
3456
EFGHI
789123
JKLMNOP
45678912
QRSTUVWXY
3456789123
ZABCDEFGHIJ
"""

layer = int(input())
is_alpha = True
alpha_count, digit_count = 0, 0
for i in range(layer):
  for j in range(i+1):
    if is_alpha:
      print(chr((alpha_count%26)+ord("A")),end='')
      alpha_count += 1
    else:
      print((digit_count%9)+1,end='')
      digit_count += 1
  is_alpha = not is_alpha
  print()
